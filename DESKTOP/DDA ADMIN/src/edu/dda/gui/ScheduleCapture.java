/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.dda.gui;

import edu.dda.models.ScheduleCaptureModel;
import edu.dda.nw.client.DDAClient;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author pvr
 */
public class ScheduleCapture extends javax.swing.JInternalFrame {

    /**
     * Creates new form ScheduleCapture
     */
    DefaultTableModel tableModel = null;
    ArrayList<ScheduleCaptureModel> requestedCaptureModels = null;
    ArrayList<ScheduleCaptureModel> scheduledCaptureModels = null;
    ArrayList<ScheduleCaptureModel> rejectedCaptureModels = null;

    public ScheduleCapture() {
        initComponents();
        initTable();
    }

    private void initTable() {
        tableModel = new DefaultTableModel(new String[]{"SL NO", "EMP ID", "DATE", "FROM TIME", "TO TIME"}, 0);
        requestedCaptureModels = DDAClient.getAllRequestedScheduleCapture();
        int count = 0;
        for (ScheduleCaptureModel scm : requestedCaptureModels) {
            count++;
            tableModel.addRow(new String[]{"" + count, scm.getEmpId() + "", scm.getScDate(), scm.getFromTime(), scm.getToTime()});
        }
        requestedTB.setModel(tableModel);

        tableModel = new DefaultTableModel(new String[]{"SL NO", "EMP ID", "DATE", "FROM TIME", "TO TIME"}, 0);
        scheduledCaptureModels = DDAClient.getAllScheduledScheduleCapture();
        count = 0;
        for (ScheduleCaptureModel scm : scheduledCaptureModels) {
            count++;
            tableModel.addRow(new String[]{"" + count, scm.getEmpId() + "", scm.getScDate(), scm.getFromTime(), scm.getToTime()});
        }
        scheduledTB.setModel(tableModel);

        tableModel = new DefaultTableModel(new String[]{"SL NO", "EMP ID", "DATE", "FROM TIME", "TO TIME"}, 0);
        rejectedCaptureModels = DDAClient.getAllRejectedScheduleCapture();
        count = 0;
        for (ScheduleCaptureModel scm : rejectedCaptureModels) {
            count++;
            tableModel.addRow(new String[]{"" + count, scm.getEmpId() + "", scm.getScDate(), scm.getFromTime(), scm.getToTime()});
        }
        rejectedTB.setModel(tableModel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        requestedTB = new javax.swing.JTable();
        acceptBT = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        scheduledTB = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        rejectedTB = new javax.swing.JTable();

        setClosable(true);
        setTitle("Schedule Capture");

        requestedTB.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(requestedTB);

        acceptBT.setText("Accept");
        acceptBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acceptBTActionPerformed(evt);
            }
        });

        jButton1.setText("Reject");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(243, 243, 243)
                        .addComponent(acceptBT)
                        .addGap(77, 77, 77)
                        .addComponent(jButton1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 627, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(acceptBT)
                    .addComponent(jButton1))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Requested", jPanel1);

        scheduledTB.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(scheduledTB);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 655, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(77, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Scheduled", jPanel2);

        rejectedTB.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane3.setViewportView(rejectedTB);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 655, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(77, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Rejected", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void acceptBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acceptBTActionPerformed

        int rowPos = requestedTB.getSelectedRow();
        if (rowPos < 0) {
            JOptionPane.showMessageDialog(null, "Must select a row", "SELECT WARNING", JOptionPane.ERROR_MESSAGE);
        } else {
            int id = requestedCaptureModels.get(rowPos).getId();
            boolean result = DDAClient.updateScheduleCaptureStatus(id, "scheduled");
            if (result) {
                initTable();
                writeToConsole("Success");
            }
        }

    }//GEN-LAST:event_acceptBTActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int rowPos = requestedTB.getSelectedRow();
        if (rowPos < 0) {
            JOptionPane.showMessageDialog(null, "Must select a row", "SELECT WARNING", JOptionPane.ERROR_MESSAGE);
        } else {
            int id = requestedCaptureModels.get(rowPos).getId();
            boolean result = DDAClient.updateScheduleCaptureStatus(id, "rejected");
            if (result) {
                initTable();
                writeToConsole("Failed");
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed
    public static void writeToConsole(String msg) {
        AdminHome.writeToConsole(msg);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton acceptBT;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable rejectedTB;
    private javax.swing.JTable requestedTB;
    private javax.swing.JTable scheduledTB;
    // End of variables declaration//GEN-END:variables
}
