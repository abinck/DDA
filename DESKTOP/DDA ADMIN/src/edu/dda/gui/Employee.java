/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.dda.gui;

import edu.dda.models.DepartmentModel;
import edu.dda.models.EmpDetailsModel;
import edu.dda.nw.client.DDAClient;
import static edu.dda.utils.RandomCodeGenerator.generateRandomCode;
import edu.dda.utils.SendMailSSL;
import edu.dda.utils.Variables;
import java.awt.Color;
import java.util.ArrayList;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author pvr
 */
public class Employee extends javax.swing.JInternalFrame {

    /**
     * Creates new form Employee
     */
    ArrayList<DepartmentModel> departmentModels = null;
    DefaultTableModel defaultTableModel = null;

    public Employee() {
        initComponents();
        initGUI();
        initTable();
    }

    private void initGUI() {
        departmentModels = DDAClient.getAllDept();
        for (DepartmentModel dm : departmentModels) {
            deptCB.addItem(dm.getDeptName());
        }
    }

    private void initTable() {
        int count = 1;
        defaultTableModel = new DefaultTableModel(new String[]{"SL NO", "EMP ID", "FIRST NAME", "LAST NAME", "PHONE", "EMAIL", "STATUS", "SESSION STATUS", "DEPT ID"}, 0);
        ArrayList<EmpDetailsModel> edms = DDAClient.getAllEmpDetails();
        for (EmpDetailsModel edm : edms) {
            defaultTableModel.addRow(new String[]{"" + count++, edm.getId() + "", edm.getFname(), edm.getLname(), edm.getPhone(), edm.getLoginModel().getEmail(), edm.getLoginModel().getStatus(), edm.getLoginModel().getSessionStatus(), edm.getMapModel().getDeptId() + ""});

        }
        empTB.setModel(defaultTableModel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        fnameTF = new javax.swing.JTextField();
        lnameTF = new javax.swing.JTextField();
        phoneTF = new javax.swing.JTextField();
        emailTF = new javax.swing.JTextField();
        deptCB = new javax.swing.JComboBox();
        addBT = new javax.swing.JButton();
        resetBT = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        empTB = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        removeBT = new javax.swing.JButton();
        blockBT = new javax.swing.JButton();
        unBlockBT = new javax.swing.JButton();

        setClosable(true);
        setTitle("EMPLOYEE");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosing(evt);
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        jLabel1.setText("First Name");

        jLabel2.setText("Last Name");

        jLabel3.setText("Phone");

        jLabel4.setText("Email");

        jLabel5.setText("Department");

        deptCB.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "--Select Department--" }));

        addBT.setText("Add");
        addBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBTActionPerformed(evt);
            }
        });

        resetBT.setText("Reset");
        resetBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetBTActionPerformed(evt);
            }
        });

        jLabel6.setText("ADD EMPLOYEE");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addGap(30, 30, 30)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                            .addComponent(addBT, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(resetBT))
                        .addComponent(fnameTF)
                        .addComponent(lnameTF)
                        .addComponent(phoneTF)
                        .addComponent(emailTF)
                        .addComponent(deptCB, javax.swing.GroupLayout.Alignment.TRAILING, 0, 205, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(fnameTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(lnameTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(phoneTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(emailTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5)
                    .addComponent(deptCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addBT)
                    .addComponent(resetBT))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(119, 119, 119)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(168, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("ADD", jPanel1);

        empTB.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(empTB);

        jLabel7.setText("MANAGE EMPLOYEE");

        removeBT.setText("REMOVE");
        removeBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeBTActionPerformed(evt);
            }
        });

        blockBT.setText("BLOCK");
        blockBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                blockBTActionPerformed(evt);
            }
        });

        unBlockBT.setText("UN BLOCK");
        unBlockBT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unBlockBTActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(229, 229, 229)
                                .addComponent(jLabel7))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(169, 169, 169)
                                .addComponent(removeBT)
                                .addGap(37, 37, 37)
                                .addComponent(blockBT)
                                .addGap(42, 42, 42)
                                .addComponent(unBlockBT)))
                        .addGap(0, 142, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel7)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(removeBT)
                    .addComponent(blockBT)
                    .addComponent(unBlockBT))
                .addContainerGap(40, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("MANAGE", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBTActionPerformed
        String fname = fnameTF.getText();
        String lname = lnameTF.getText();
        String phone = phoneTF.getText();
        String email = emailTF.getText();
        int position = deptCB.getSelectedIndex();

        if ("".equals(fname)) {
            fnameTF.setBorder(BorderFactory.createLineBorder(Color.red));
            JOptionPane.showMessageDialog(null, "Enter First Name", "WARNING", JOptionPane.WARNING_MESSAGE);

        } else if ("".equals(lname)) {
            lnameTF.setBorder(BorderFactory.createLineBorder(Color.red));
            JOptionPane.showMessageDialog(null, "Enter Last Name", "WARNING", JOptionPane.WARNING_MESSAGE);

        } else if ("".equals(phone)) {
            phoneTF.setBorder(BorderFactory.createLineBorder(Color.red));
            JOptionPane.showMessageDialog(null, "Enter Phone Number", "WARNING", JOptionPane.WARNING_MESSAGE);

        } else if ("".equals(email)) {
            emailTF.setBorder(BorderFactory.createLineBorder(Color.red));
            JOptionPane.showMessageDialog(null, "Enter Email Address", "WARNING", JOptionPane.WARNING_MESSAGE);

        } else if (position < 1) {
            deptCB.setBorder(BorderFactory.createLineBorder(Color.red));
            JOptionPane.showMessageDialog(null, "Select Department", "WARNING", JOptionPane.WARNING_MESSAGE);

        } else {
            String deptId = departmentModels.get(position - 1).getId() + "";
            String passwd = generateRandomCode(6);
            boolean result = DDAClient.addEmp(fname, lname, phone, email, deptId, passwd);
            if (result) {
//            SendMailSSL.sendMail(email, "PASSWORD FOR LOGIN", "Password: "+passwd);
                initTable();
                reset();
                writeToConsole("Employee Added Sucessfully");
            } else {
                writeToConsole("Failed to add");
            }
        }

    }//GEN-LAST:event_addBTActionPerformed

    private void formInternalFrameClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosing
        Variables.employeeFormOpenStatus = false;
    }//GEN-LAST:event_formInternalFrameClosing

    private void resetBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetBTActionPerformed
        reset();
    }//GEN-LAST:event_resetBTActionPerformed

    private void blockBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_blockBTActionPerformed
        int rowPos = empTB.getSelectedRow();
        if (rowPos >= 0) {
            String empId = empTB.getValueAt(rowPos, 1).toString();
            String status = empTB.getValueAt(rowPos, 6).toString();
            if ("active".equals(status)) {
                boolean result = DDAClient.manageEmp(empId, "block");
                if (result) {
                    initTable();
                    writeToConsole("Employee blocked successfully");
                } else {
                    writeToConsole("Failed to block");
                }

            } else {
                writeToConsole("This employee is already blocked");
                JOptionPane.showMessageDialog(null, "This employee is already blocked", "BLOCK WARNING", JOptionPane.WARNING_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Must select a row", "SELECT WARNING", JOptionPane.ERROR_MESSAGE);
        }


    }//GEN-LAST:event_blockBTActionPerformed

    private void unBlockBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unBlockBTActionPerformed
        int rowPos = empTB.getSelectedRow();
        if (rowPos >= 0) {
            String empId = empTB.getValueAt(rowPos, 1).toString();
            String status = empTB.getValueAt(rowPos, 6).toString();
            if ("inactive".equals(status)) {
                boolean result = DDAClient.manageEmp(empId, "unblock");
                if (result) {
                    initTable();
                    writeToConsole("Employee unblocked successfully");
                } else {
                    writeToConsole("Failed to unblock");
                }

            } else {
                writeToConsole("This employee is not a blocked one");
                JOptionPane.showMessageDialog(null, "This employee is not a blocked one", "UNBLOCK WARNING", JOptionPane.WARNING_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Must select a row", "SELECT WARNING", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_unBlockBTActionPerformed

    private void removeBTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeBTActionPerformed
        int rowPos = empTB.getSelectedRow();

        if (rowPos >= 0) {
            String empId = empTB.getValueAt(rowPos, 1).toString();
            boolean result = DDAClient.manageEmp(empId, "remove");
            if (result) {
                initTable();
                writeToConsole("Employee removed successfully");
            } else {
                writeToConsole("Failed to remove");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Must select a row", "SELECT WARNING", JOptionPane.ERROR_MESSAGE);
        }


    }//GEN-LAST:event_removeBTActionPerformed
    private void reset() {
        fnameTF.setText(null);
        lnameTF.setText(null);
        phoneTF.setText(null);
        emailTF.setText(null);
        deptCB.setSelectedIndex(0);
        fnameTF.setBorder(BorderFactory.createLineBorder(null));
        lnameTF.setBorder(BorderFactory.createLineBorder(null));
        phoneTF.setBorder(BorderFactory.createLineBorder(null));
        emailTF.setBorder(BorderFactory.createLineBorder(null));
        deptCB.setBorder(BorderFactory.createLineBorder(null));

    }

    public static void writeToConsole(String msg) {
        AdminHome.writeToConsole(msg);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addBT;
    private javax.swing.JButton blockBT;
    private javax.swing.JComboBox deptCB;
    private javax.swing.JTextField emailTF;
    private javax.swing.JTable empTB;
    private javax.swing.JTextField fnameTF;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField lnameTF;
    private javax.swing.JTextField phoneTF;
    private javax.swing.JButton removeBT;
    private javax.swing.JButton resetBT;
    private javax.swing.JButton unBlockBT;
    // End of variables declaration//GEN-END:variables
}
